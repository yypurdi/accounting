/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'AppAccountClassRead',
    Heading:'AppAccountClass',
    AccountClassId:{label :'AccountClassId'},
    ClassificationName:{label :'ClassificationName'},
    Desc:{label :'Desc'},
    AppAccountSubClass:{Heading:'AppAccountSubClass',
        AccountSubClassId:{header:'AccountSubClassId'},
        AccountSubClassName:{header:'AccountSubClassName'},
        Note:{header:'Note'},
        AccountClassId:{header:'AccountClassId'},
        },
    AppRptBalanceSheet:{Heading:'AppRptBalanceSheet',
        RptBalanceSheetId:{header:'RptBalanceSheetId'},
        RptBalanceSheetName:{header:'RptBalanceSheetName'},
        DepartmentFrom:{header:'DepartmentFrom'},
        DepartmentTo:{header:'DepartmentTo'},
        CurrencyId:{header:'CurrencyId'},
        AccountClassId:{header:'AccountClassId'},
        AccountSubClassId:{header:'AccountSubClassId'},
        AccountNo:{header:'AccountNo'},
        EndingBalanceDebit:{header:'EndingBalanceDebit'},
        EndingBalanceCredit:{header:'EndingBalanceCredit'},
        ComparativeEndingBalanceDebit:{header:'ComparativeEndingBalanceDebit'},
        ComparativeEndingBalanceCredit:{header:'ComparativeEndingBalanceCredit'},
        DateCreated:{header:'DateCreated'},
        CreatedBy:{header:'CreatedBy'},
        },
    }

router.get('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.query;
    jsonObj.rowid = 0;
    req.session.previouspath = 'readAppAccountClass?'+req._parsedUrl.query;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
    }
    var readAppAccountClass = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.readAppAccountClass(jsonObj,function(err,rows) {
                if(err) res.status(err.code).end();
                else{
                    if(rows[0]===undefined) res.redirect('/searchAppAccountClass');
                    else{ 
                        jsonObj = rows[0];
                        resolve(jsonObj);
                    }
                }
            });
        },1000);
    });
    
    var appAccountSubClass = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.searchAppAccountSubClass(jsonObj,function(err,rows) {
                jsonObj.appAccountSubClass = rows;
                resolve(jsonObj);
            });
        },1000);
    });
    
    var appRptBalanceSheet = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.searchAppRptBalanceSheet(jsonObj,function(err,rows) {
                jsonObj.appRptBalanceSheet = rows;
                resolve(jsonObj);
            });
        },1000);
    });
    
    var sendResult = (results) => {
        console.log(jsonObj)
        parameter.record = jsonObj;        
        res.render('AppAccountClassReadPage',parameter);
    }    
    Promise.all([readAppAccountClass,appAccountSubClass,appRptBalanceSheet]).then(sendResult);
});

module.exports = router;
