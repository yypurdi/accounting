/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'AppProductStockInfoSearch',
    Heading:'AppProductStockInfo',
    ProductStockInfoId:{label :'ProductStockInfoId'},
    QtyInStock:{label :'QtyInStock'},
    OrderedToVendor:{label :'OrderedToVendor'},
    OrderedByCustomer:{label :'OrderedByCustomer'},
    MinimumInventory:{label :'MinimumInventory'},
    MinimumOrder:{label :'MinimumOrder'},
    SalesForecast:{label :'SalesForecast'},
    BuyingPrice:{label :'BuyingPrice'},
    ProductId:{label :'ProductId'},
    BuyingPriceTax:{label :'BuyingPriceTax'},
    SellingUnitPriceTax:{label :'SellingUnitPriceTax'},
    UnitCostOrCogs:{label :'UnitCostOrCogs'},
    CogsDepartment:{label :'CogsDepartment'},
    LocationMaster:{label :'LocationMaster'},
    DeliveryTimeIndays:{label :'DeliveryTimeIndays'},
    CurrentSellingPrice:{label :'CurrentSellingPrice'},
    MainVendor:{label :'MainVendor'},
    AppProductStockInfo:{Heading:'AppProductStockInfo',
        ProductStockInfoId:{header:'ProductStockInfoId'},
        QtyInStock:{header:'QtyInStock'},
        OrderedToVendor:{header:'OrderedToVendor'},
        OrderedByCustomer:{header:'OrderedByCustomer'},
        MinimumInventory:{header:'MinimumInventory'},
        MinimumOrder:{header:'MinimumOrder'},
        SalesForecast:{header:'SalesForecast'},
        BuyingPrice:{header:'BuyingPrice'},
        ProductId:{header:'ProductId'},
        BuyingPriceTax:{header:'BuyingPriceTax'},
        SellingUnitPriceTax:{header:'SellingUnitPriceTax'},
        UnitCostOrCogs:{header:'UnitCostOrCogs'},
        CogsDepartment:{header:'CogsDepartment'},
        LocationMaster:{header:'LocationMaster'},
        DeliveryTimeIndays:{header:'DeliveryTimeIndays'},
        CurrentSellingPrice:{header:'CurrentSellingPrice'},
        MainVendor:{header:'MainVendor'},
        },
    }

router.get('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.query;
    if(jsonObj.rowid===undefined) jsonObj.rowid = 0;
    req.session.previouspath = 'searchAppProductStockInfo?'+req._parsedUrl.query;
    dao.searchAppProductStockInfo(jsonObj,function(err,rows) {
        parameter = {
            session: req.session,
            cookies: req.cookies,
            resource: appresource,
            dateFormat: dateFormat,
            records: rows,
        }
        res.render('AppProductStockInfoSearchPage',parameter);
        console.log(parameter);        
    })
});

module.exports = router;
