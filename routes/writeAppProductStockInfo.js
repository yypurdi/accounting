/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'AppProductStockInfoWrite',
    Heading:'AppProductStockInfo',
    ProductStockInfoId:{label :'ProductStockInfoId'},
    QtyInStock:{label :'QtyInStock'},
    OrderedToVendor:{label :'OrderedToVendor'},
    OrderedByCustomer:{label :'OrderedByCustomer'},
    MinimumInventory:{label :'MinimumInventory'},
    MinimumOrder:{label :'MinimumOrder'},
    SalesForecast:{label :'SalesForecast'},
    BuyingPrice:{label :'BuyingPrice'},
    ProductId:{label :'ProductId'},
    BuyingPriceTax:{label :'BuyingPriceTax'},
    SellingUnitPriceTax:{label :'SellingUnitPriceTax'},
    UnitCostOrCogs:{label :'UnitCostOrCogs'},
    CogsDepartment:{label :'CogsDepartment'},
    LocationMaster:{label :'LocationMaster'},
    DeliveryTimeIndays:{label :'DeliveryTimeIndays'},
    CurrentSellingPrice:{label :'CurrentSellingPrice'},
    MainVendor:{label :'MainVendor'},
    }

router.get('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.query;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
        statusCode:100,
        statusMessage:'',
    }
    dao.readAppProductStockInfo(jsonObj,function(err,rows) {
        parameter.record = rows[0];
        res.render('AppProductStockInfoWritePage',parameter);
        console.log(parameter);        
    });
});
router.post('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.body;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,        
    }
    dao.writeAppProductStockInfo(jsonObj,function(err,rows) {    
        if(err==null){
            parameter.statusCode = 200;
            parameter.statusMessage = 'Successfully created';
        }else{
            parameter.statusCode = err.code;
            parameter.statusMessage = err.message;
        }
        parameter.record = jsonObj;
        res.render('AppProductStockInfoWritePage',parameter);
        console.log(parameter);        
    });
});

module.exports = router;
